import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

public class Room extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    public Room() {
        initComponents();
        con = Connect.ConnectDB();
        Get_Data();
        setLocationRelativeTo(null);
    }

    private void Reset() {
        txtRoomNo.setText("");
        txtRoomCharges.setText("");
        cmbRoomType.setSelectedIndex(-1);
        btnSave.setEnabled(true);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        txtRoomNo.requestFocus();
        Get_Data();
    }

    private void Get_Data() {
        String sql = "SELECT RoomNo AS 'Room No.', RoomType AS 'Room Type', RoomCharges AS 'Room Charges', RoomStatus AS 'Room Status' FROM Room";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            Room_table.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    @SuppressWarnings("unchecked")
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRoomNo = new javax.swing.JTextField();
        cmbRoomType = new javax.swing.JComboBox<>();
        txtRoomCharges = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnGetData = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Room_table = new javax.swing.JTable();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Room Info"));

        jLabel1.setText("Room No.");

        jLabel2.setText("Room Type");

        jLabel3.setText("Room Charges");

        cmbRoomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "Deluxe" }));
        cmbRoomType.setSelectedIndex(-1);

        txtRoomCharges.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRoomChargesKeyTyped(evt);
            }
        });

        // Rest of the code...

        // Event handlers...

        private void txtRoomChargesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRoomChargesKeyTyped
            // Add your implementation here if needed
        }

        private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
            Reset();
        }

        private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
            try {
                con = Connect.ConnectDB();
                if (txtRoomNo.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Please enter room no.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (cmbRoomType.getSelectedItem().equals("")) {
                    JOptionPane.showMessageDialog(this, "Please select room type", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (txtRoomCharges.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Please enter room charges", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                Statement stmt;
                stmt = con.createStatement();
                String sql1 = "SELECT RoomNo FROM Room WHERE RoomNo = '" + txtRoomNo.getText() + "'";
                rs = stmt.executeQuery(sql1);
                if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Room No. already exists", "Error", JOptionPane.ERROR_MESSAGE);
                    txtRoomNo.setText("");
                    txtRoomNo.requestFocus();
                    return;
                }

                String sql = "INSERT INTO Room(RoomNo, RoomType, RoomCharges, RoomStatus) VALUES ('" + txtRoomNo.getText() + "','" + cmbRoomType.getSelectedItem() + "'," + txtRoomCharges.getText() + ",'Vacant')";
                pst = con.prepareStatement(sql);
                pst.execute();

                JOptionPane.showMessageDialog(this, "Successfully saved", "Room Record", JOptionPane.INFORMATION_MESSAGE);
                btnSave.setEnabled(false);
                Get_Data();
            } catch (HeadlessException | SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }

        private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
            try {
                con = Connect.ConnectDB();
                String sql = "UPDATE Room SET RoomType='" + cmbRoomType.getSelectedItem() + "', RoomCharges=" + txtRoomCharges.getText() + " WHERE RoomNo='" + txtRoomNo.getText() + "'";
                pst = con.prepareStatement(sql);
                pst.execute();
                JOptionPane.showMessageDialog(this, "Successfully updated", "Room Record", JOptionPane.INFORMATION_MESSAGE);
                btnUpdate.setEnabled(false);
                Get_Data();
            } catch (HeadlessException | SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }

        private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
            try {
                int P = JOptionPane.showConfirmDialog(null, "Are you sure want to delete?", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (P == 0) {
                    con = Connect.ConnectDB();

                    String sql = "DELETE FROM Room WHERE RoomNo = '" + txtRoomNo.getText() + "'";
                    pst = con.prepareStatement(sql);
                    pst.execute();
                    JOptionPane.showMessageDialog(this, "Successfully deleted", "Record", JOptionPane.INFORMATION_MESSAGE);
                    Reset();
                }
            } catch (HeadlessException | SQLException ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        }

        // Rest of the code...

        // Variables declaration...

        // End of variables declaration...
    }
}
